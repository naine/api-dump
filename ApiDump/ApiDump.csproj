<Project Sdk="Microsoft.NET.Sdk" InitialTargets="GitVersions">
  <PropertyGroup>
    <AssemblyName>apidump</AssemblyName>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <RollForward>Major</RollForward>
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
    <PublishSingleFile>true</PublishSingleFile>
    <SelfContained>false</SelfContained>
    <UseCurrentRuntimeIdentifier>true</UseCurrentRuntimeIdentifier>
    <AssemblyTitle>$(MSBuildProjectName)</AssemblyTitle>
    <Product>$(MSBuildProjectName)</Product>
    <Authors>Nathan Williams</Authors>
    <Copyright>Copyright Â© Nathan Williams 2020</Copyright>
    <Description>Tool for displaying the public types and API signatures of a .NET IL assembly.</Description>
    <Version>0.1.0</Version>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.1.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\DummyBCL\**\*.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <OutputItemType>DummyBCL</OutputItemType>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="..\README.md" />
    <EmbeddedResource Include="$(IntermediateOutputPath)DummyBCL.zip" Link="DummyBCL.zip" Visible="false" />
  </ItemGroup>
  <Target Name="ZipDummyBCL" BeforeTargets="BeforeCompile" Inputs="@(DummyBCL)" Outputs="$(IntermediateOutputPath)DummyBCL.zip">
    <Copy SourceFiles="@(DummyBCL)" DestinationFolder="$(IntermediateOutputPath)DummyBCL" SkipUnchangedFiles="true" UseHardlinksIfPossible="true" />
    <ZipDirectory SourceDirectory="$(IntermediateOutputPath)DummyBCL" DestinationFile="$(IntermediateOutputPath)DummyBCL.zip" Overwrite="true" />
  </Target>
  <Target Name="GitVersions">
    <Exec Command="git rev-list --count HEAD" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitRevCount" />
      <Output TaskParameter="ExitCode" PropertyName="GitExitCode" />
    </Exec>
    <Exec Command="git rev-parse --short HEAD" ConsoleToMSBuild="true" Condition="'$(GitExitCode)'=='0'">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommit" />
      <Output TaskParameter="ExitCode" PropertyName="GitExitCode" />
    </Exec>
    <PropertyGroup Condition="'$(GitExitCode)'=='0'">
      <Version>$(Version).$(GitRevCount)</Version>
      <InformationalVersion>$(Version)-$(GitCommit)</InformationalVersion>
    </PropertyGroup>
  </Target>
</Project>
